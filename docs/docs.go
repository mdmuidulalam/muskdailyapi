// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2020-04-18 14:46:11.4668625 +0600 +06 m=+0.026929001

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/account/activate": {
            "post": {
                "description": "It will activate the account if proper code is provided. The code will be sent to user through email.",
                "consumes": [
                    "application/json"
                ],
                "summary": "Activate a account",
                "operationId": "activate-new-account",
                "parameters": [
                    {
                        "description": "Email",
                        "name": "Email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "ActivationCode",
                        "name": "ActivationCode",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The account is activated."
                    },
                    "400": {
                        "description": "The server cannot or will not process the request due to an apparent client error."
                    },
                    "401": {
                        "description": "Wrong activation code is given."
                    },
                    "406": {
                        "description": "The account is already activated."
                    },
                    "409": {
                        "description": "The account is not registered yet."
                    }
                }
            }
        },
        "/account/signup": {
            "post": {
                "description": "It will register new users if the post data provided properly.",
                "consumes": [
                    "application/json"
                ],
                "summary": "Signup an account",
                "operationId": "signup-new-account",
                "parameters": [
                    {
                        "description": "FirstName",
                        "name": "firstName",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "LastName",
                        "name": "lastname",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Email",
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Password",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created a new account. Not active yet, an activation email will be sent to the given email."
                    },
                    "400": {
                        "description": "The server cannot or will not process the request due to an apparent client error."
                    },
                    "406": {
                        "description": "An account already exists with the given email."
                    },
                    "409": {
                        "description": "Account was created before but not activated. A new activation email will be sent to the given email."
                    }
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
